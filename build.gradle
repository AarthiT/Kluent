plugins {
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.70'
}
repositories {
    mavenCentral()
}
group 'org.amshove.kluent'
version '2.0'

kotlin {
    jvm()
    jvm('android') {
        compilations.main.kotlinOptions {
            jvmTarget = '1.6'
        }
        compilations.test.kotlinOptions {
            jvmTarget = '1.6'
        }
    }
    js {
        browser {
        }
        nodejs {
        }
    }
    // Currently ncurses5 must be installed (see https://github.com/JetBrains/kotlin-native/issues/2674)
    linuxX64('linux')
    mingwX64('windows')
    macosX64('macOS')
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation kotlin('test-common')
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation kotlin('reflect')
                implementation kotlin('test-junit')

                implementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')

                // TODO: Should be testImplementation?
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.3'
            }
        }
        // TODO: Figure out how to not have duplicate module entries (Android is conflicted with JVM when importing in IntelliJ
        androidMain {
            kotlin.filter.exclude '**/*Backtick*'
            kotlin.srcDirs += jvmMain.kotlin.srcDirs
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation kotlin('reflect')
                implementation kotlin('test-junit')

                implementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
            }
        }
        androidTest {
            kotlin.filter.exclude '**/*Backtick*'
            kotlin.srcDirs += jvmTest.kotlin.srcDirs
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')

                // TODO: Should be in JVM?
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.3'
            }
        }
        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
                implementation kotlin('test-js')
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
        linuxMain {
        }
        linuxTest {
        }
        windowsMain {
        }
        windowsTest {
        }
        macOSMain {
        }
        macOSTest {
        }
    }
}

bintray {
    user = getBintrayUser()
    key = getBintrayKey()
    publish = false
    override = true

    pkg {
        repo = 'maven'
        name = 'kluent'
        userOrg = 'markusamshove'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/MarkusAmshove/Kluent'
    }
}

bintrayUpload.doFirst {
    publications = publishing.publications.collect {
        it.name
    }.findAll {
        it != "kotlinMultiplatform"
    }
}

bintrayUpload.dependsOn publishToMavenLocal

def getBintrayUser() {
    def user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    println("Using user: $user")
    return user
}

def getBintrayKey() {
    def key = project.hasProperty('bintrayKey') ? project.property('bintrayKey') : System.getenv('BINTRAY_KEY')
    println("Using key: $key")
    return key
}
